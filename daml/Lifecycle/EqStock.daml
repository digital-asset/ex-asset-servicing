daml 1.2
module Lifecycle.EqStock where

import Lifecycle.Agreement
import RefData.EqStock
import Types
import Utils

template InstrumentLifecycle
  with
    instrumentHost  : Party
    positionHosts   : [Party]
  where
    signatory instrumentHost
    key instrumentHost : Party
    maintainer key

    controller instrumentHost can
      nonconsuming InstrumentLifecycle_StockSplit: ()
        with
          instrumentId  : Id
          ratio         : Decimal
        do
          -- Update Instrument
          (_, eqStock) <- fetchAndArchiveByKey @EqStock instrumentId
          let instrumentIdNew = instrumentId with version = instrumentId.version + 1
          create eqStock with instrumentId = instrumentIdNew

          -- Create Position Lifecycle Rules
          let outcome = [(instrumentIdNew, ratio)]
          mapA (\posHost -> optExerciseByKey @LifecycleAgreement (instrumentHost, posHost) LifecyclePosition_Create with ..) positionHosts

          return ()
