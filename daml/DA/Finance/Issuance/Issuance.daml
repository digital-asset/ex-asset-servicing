module DA.Finance.Issuance.Issuance where

import DA.Finance.Asset
import DA.Finance.Instrument.Equity.Option
import DA.Finance.Types
import DA.Next.Set (fromList)

data AdmissionCheck = AdmissionCheck
  with
    parties : Bool
    product : Bool
    legalDocs : Bool
  deriving (Eq, Show)

data WarrantTerms = WarrantTerms
  with
    underlying : Id
    optionType : OptionType
    strike : Decimal
    exerciseType : ExerciseType
    expiry : Date
    contractSize : Decimal
  deriving (Eq, Show)

data WarrantIssuanceData = WarrantIssuanceData
  with
    label : Text
    terms : WarrantTerms
    issueSize : Decimal
    minimumDenomination : Decimal
  deriving (Eq, Show)

template Warrant
  with
    id : Id
    issuer : Party
    terms : WarrantTerms
    observers : [Party]
  where
    signatory id.signatories
    observer observers

    choice Warrant_SetObservers : ContractId Warrant
      with
        ctrl : Party
        newObservers : [Party]
      controller ctrl
      do
        create this with observers = newObservers

template WarrantIssuanceRequest
  with
    depository : Party
    issuer : Party
    agent : Party
    issuanceData : WarrantIssuanceData
    issuanceAccount : Account
    settled : Bool
  where
    signatory depository, issuer
    observer agent

    controller depository can
      SettleIssuanceRequest : ContractId AssetDeposit
        with
          depositInstructionCid : ContractId DepositInstruction
        do
          assert $ not settled
          create this with settled = True
          exercise depositInstructionCid SettleDepositInstruction

template AdmissionCheckRequest
  with
    depository : Party
    issuer : Party
    agent : Party
    issuanceData : WarrantIssuanceData
  where
    signatory depository, agent
    observer issuer

    controller depository can
      RespondAdmissionCheck : ContractId AdmissionCheckResponse
        with
          admissionCheck : AdmissionCheck
        do
          create AdmissionCheckResponse with ..

template AdmissionCheckResponse
  with
    depository : Party
    issuer : Party
    agent : Party
    issuanceData : WarrantIssuanceData
    admissionCheck : AdmissionCheck
  where
    signatory depository, agent
    observer issuer

    controller depository can
      DeleteAdmissionCheckResponse : ()
        do pure ()

template CodeAllocationRequest
  with
    depository : Party
    issuer : Party
    agent : Party
    issuanceData : WarrantIssuanceData
    admissionCheck : AdmissionCheck
  where
    signatory depository, agent
    observer issuer

    controller depository can
      RespondCodeAllocation : ContractId CodeAllocationResponse
        with
          allocatedCode : Text
        do
          create CodeAllocationResponse with ..

template CodeAllocationResponse
  with
    depository : Party
    issuer : Party
    agent : Party
    issuanceData : WarrantIssuanceData
    allocatedCode : Text
  where
    signatory depository, agent
    observer issuer

    controller depository can
      DeleteCodeAllocationResponse : ()
        do pure ()
        

template GlobalNotesRequest
  with
    depository : Party
    issuer : Party
    agent : Party
    issuanceData : WarrantIssuanceData
    admissionCheck : AdmissionCheck
    allocatedCode : Text
  where
    signatory depository, agent
    observer issuer

    controller depository can
      RespondGlobalNotes : ContractId GlobalNotesResponse
        with
          success : Bool
        do
          create GlobalNotesResponse with ..

template GlobalNotesResponse
  with
    depository : Party
    issuer : Party
    agent : Party
    issuanceData : WarrantIssuanceData
    success : Bool
  where
    signatory depository, agent
    observer issuer

    controller depository can
      DeleteGlobalNotesResponse : ()
        do pure ()

template DepositInstruction
  with
    depository : Party
    agent : Party
    issuer : Party
    issuanceData : WarrantIssuanceData
    account : Account
    asset : Asset
  where
    signatory depository
    observer agent, issuer
    
    controller depository can
      SettleDepositInstruction : ContractId AssetDeposit
        do
          let observers = fromList [ account.provider, account.owner ]
          create AssetDeposit with asset = asset; account = account; ..

